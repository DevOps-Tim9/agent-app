name: CI workflow
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize]
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        
    steps:
    - uses: actions/checkout@v3
    - uses: webiny/action-conventional-commits@v1.0.3
    
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: node-modules-cache2
      with:
        # caching node_modules
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Dependencies
      working-directory: ./agent-app-FE
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        npm install

    - name: Build BE
      working-directory: ./agent-be
      run: go build -v ./...
      

    - name: Build FE
      working-directory: ./agent-app-FE
      run: |
        npm run build

    - name: Unit test
      working-directory: ./agent-be
      run: go test -v -run=".+UnitTestsSuite" ./...

    - name: Integration tests
      working-directory: ./agent-be
      run: docker-compose -f docker-compose.test.yml up --exit-code-from agent-server-test
