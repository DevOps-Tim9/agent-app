version: "3.7"

services:
  agent-database-test:
    image: postgres:13
    restart: always
    networks:
      - agent-ms-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: AgentApp-test
    healthcheck:
      test: pg_isready -U postgres -d AgentApp-test
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    ports:
      - 5432

  agent-server-test:
    build:
      dockerfile: Dockerfile.test
      context: .
    networks:
      - agent-ms-test
      - network-for-ms
    environment:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: admin
      DATABASE_DOMAIN: agent-database-test
      DATABASE_SCHEMA: AgentApp-test
      DATABASE_PORT: 5432
      SERVER_PORT: 9094
      AMQP_SERVER_URL: amqp://guest:guest@rabbitmq:5673/
      AUTH0_DOMAIN: ten-test.eu.auth0.com
      AUTH0_CLIENT_ID: VEoiS6gjRN5S5wdm4qKqgphWh5rHp420
      AUTH0_CLIENT_SECRET: 6hJj_WWJwHQ8bQEua_cTEOk1p6_k4SQBeqfQBGCjGWfvExsaQYjweF-OHqARfKZL
      AUTH0_AUDIENCE: https://ten-test.eu.auth0.com/api/v2/
      JOBS_MS: http://localhost:9099/jobOffers
    ports:
      - 9094
    depends_on:
      agent-database-test:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    networks:
      - network-for-ms
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    ports:
      - 15672
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 15s
      retries: 5
    restart: always

  database-jobs:
    image: postgres:13
    restart: always
    networks:
      - jobs-ms
      - network-for-ms
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    ports:
      - "5436:5432"

  jobs-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${TARGET:-run}
    restart: on-failure
    networks:
      - jobs-ms
      - network-for-ms
    environment:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: admin
      DATABASE_DOMAIN: jobs-database-test
      DATABASE_SCHEMA: JobOffers-tests
      DATABASE_PORT: 5432
      SERVER_PORT: 9099
    ports:
      - "9099:9099"
    depends_on:
      database-jobs:
        condition: service_healthy

networks:
  agent-ms-test:
    name: agent-ms-test
    driver: bridge
  jobs-ms:
    name: jobs-ms
    driver: bridge
  network-for-ms:
    name: network-for-ms
